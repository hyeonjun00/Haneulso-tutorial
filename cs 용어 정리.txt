<컴파일러>
개발자가 작성한 고급언어인 프로그래밍 언어를 컴퓨터가 해석할 수 있도록 기계어로 변환시켜주는 역할

컴파일 과정은 전처리 과정-컴파일 과정-어셈블리 과정- linking과정 의 4가지 단계로 나누어 짐.

1.전처리 과정
전처리기를 통해 소스코드 파일(*.c)을 전처리된 파일(*.i)로 변환하는 과정
대표적인 작업으로는 주석제거, 헤더 파일 삽입, 매크로 치환 및 적용이 있다.
#include #define ...

2.컴파일 과정 
컴파일러를 통해 전처리된 파일(*.i)을 어셈블리어 파일(*.s)로 변환하는 과정

3.어셈블리 과정
어셈블러를 통해 어셈블리어 파일(*.s)을 오브젝트 파일(*.o)로 변환하는 과정

4.Linking 과정
링커를 통해 오브젝트 파일(*.o)을 묶어 실행 파일(.exe)파일로 만드는 과정
라이브러리 함수와 오브젝트 파일을 연결하여 실행파일을 생성


<gcc>
-GNU Compiler Collection의 약자. 리눅스 운영체제에서 동작하는 컴파일러-->윈도우에서는 동작 x

<컴퓨터 계층>

컴퓨터 --하드웨어와 소프트웨어로 구성 
소프트웨어--응용프로그램(Exel,chrome..)과 운영체제(Linux,  MacOS, Windows..)로 구성
운영체제--시스템프로그래밍(shell..)과 커널로 구성

<커널>
커널은 운영체제의 핵심부. 하드웨어와 응용 프로그램 사이에서 인터페이스를 제공하고 컴퓨터 자원(cpu, 메모리, 파일, 네트워크, 입출력 장치)을 관리하는 역할을 함
이러한 커널은 컴퓨터 자원만 바라보고 있기 때문에 사용자와 상호작용을 지원하지 않는다. 

이때 사용자가 컴퓨터에게 전달하는 명령을 해석하는 프로그램으로 커널과 사용자 간의 다리역할을 수행하는 것이 시스템 프로그램이다.
shell은 대표적인 시스템 프로그램으로 운영체제 상에서 다양한 운영체제 기능과 서비스를 구현하는 인터페이스를 제공한다.


<추상화 >
커널은 컴퓨터의 물리적 자원(HW)과 추상화 자원을 관리한다.
추상화란 물리적으로 하나뿐인 하드웨어를 여러 사용자들이 등록하여 번갈아 가며 사용 할 수 있도록 마치 여러개처럼 보이게 하는 기술. 즉 커널이 관리함에 따라 각 사용자들은
하나의 하드웨어를 독점하는 것처럼 느낄 수 있게 한다.
커널이 물리적 자원들을 추상화 하며 용어가 달라진다.
cpu --task or process
memory -- page or segment
disk -- file
network -- Soket 

이를 바탕으로 커널은 process management, memory management, file system, network managment, device driver management, I/O comunication  같은 작업을 수행한다.
커널은 사용자가 system call을 통해 컴퓨터 자원을 사용할 수 있게 해주는 자원 관리자.

커널은 운영체제의 핵심 구성요소, 커널+애플리케이션,유틸리티 = 운영체제  즉 운영체제는 커널공간과 사용자 공간으로 나뉨.
리눅스 자체는 사용자 애플리케이션을 포함하지 않고 핵심 기능만 포함하기 때문에 커널이라고 할 수 있는데, 이러한 기본 리눅스 커널에 다양한 확장 애플리케이션을 추가하여 운영체제를 제공한다.
그게 바로 대표적으로 Ubuntu, CentOS !!


정리하자면
사용자 ---> 시스템 프로그램(shell 등등...) --->커널 ---> 컴퓨터 자원 접근



<Terminal, shell>
터미널(==console)은 입출력이 가능한 하드웨어. 명령어를 입력받고 출력하는 곳이자 명령을 입력하는 shell을 실행하기 위한 껍데기.
우리가 접하는 터미널은 물리적인 하드웨어를 소프트웨어로 구현한 것으로 Terminal Emulator라는 표현이 더 정확함. 
결론적으론 터미널은 명령을 입력하는 쉘을 실행하기 위한 토대. 터미널 => tv,  shell=> 방송 tv를 켬과 동시에 방송이 송출되는 것과 같이 터미널이 실행됨과 동시에 쉘이 실행되어 명령을 입력할수 있음.




<폴더와 디텍토리의 차이>
도스나 리눅스의 텍스트모드 프롬프트에서는 디텍토리라고 부르고 윈도우나 매킨토시같은 그래픽 환경에서는 폴더라고 보통 부른다. 99% 같은 말. 보통 폴더는 디텍토리보다 좀더 넓은 개념.


<우분투 명령어 모음>

$pwd			현재 디텍토리 확인
$ls 			현재 디텍토리 목록을 출력
$cd folder1		chage directory, 해당 디렉토리로 이동 	
$sudo apt install 		우분투 내 필요한 패키지 설치  
				sudo: super user do, 리눅스 계열에서 다른 사용자의 보안 권한과 관련된 프로그램을 구동할 수 있게 도와주는 것 
				apt: advanced package tool: 우분투에서 쓰이는 데비안 계열의 패키지를 관리하는데 쓰이는 도구. 응용 프로그램 설치*삭제*최신버전 유지, 등등 가능	
$mkdir [디텍토리명]		우분투에서 디텍토리 생성
$touch [파일명]		우분투에서 빈파일 생성 
$rmdir [삭제할 디텍토리 명]	
.
.
.
.
천천히 채워넣자.

과제 관련 내용


<makefile>
-linux상에서 반복적으로 발생하는 컴파일을 쉽게하기 위해서 사용하는 make프로그램의 설정파일

-makefile을 통하여 library 및 컴파일 환경을 관리할 수 있다.

-shell에서 컴파일하는 방법중 하나이며, makefile이라는 파일에 어떤파일을 컴파일 하는지 어떤 방식으로 컴파일 할지 작성하고,
 make라는 명령어를 입력하면 makefile 이 들어있는 디렉토리에서 파일들의 종속관계를 파악하여 자동적으로 컴파일하게 된다.
  즉, makefile를 사용하여 컴파일 하면 여러개의 파일을 컴파일할때, 자동화로 인해 시간을 절약하고, 프로그램의 종속 구조를 쉽게 파악할 수 있다.
 만약 프로그램을 일부 수정한다면, 그 부분에 대해서만 컴파일 하도록 도와주기 때문에 훨씬 효율적이다.





<Linux>

브라우저를 열고 하는 서비스를 world wide web service(WWW) 줄여서 웹서비스라고 한다. 브라우저를 열어서 웹체이즈를 통해 뉴스를 보거나 채팅을 하거나 하는데 이러한 웹페이지를 보려면 어떤 컴퓨터에서 부터 파일이 전달되어야 한다.
이렇게 우리게게 무언걸 제공해주는 컴퓨터를 러프하게 server라고 부른다. client-server 환경에서 서비스를 제공해주는 쪽이 server, 제공받는 쪽이 client이다. 특히 웹페이지를 볼 수 있게 해주는 컴퓨터를 웹서버라고 한다. 즉 우리가
브라우저를 통해 보는 파일들은 웹서버에서 인터넷선을 타고 내 컴퓨터에서 가져와서 볼 수 있는것. 이 브라우저가 동작하고 있는 내 컴퓨터는 windows 11, macOS 등과 같은 운영체제이고 만약 웹서비스를 스마트폰으로 본다면 iOS, Android
일 것이다. 이때 web server 컴퓨터도 또한 운영체제를 가져야 하는데 그것이 Linux, Unix, windows-server이다. 이러한 OS를 네트워크 OS(NOS)라고 한다. 서버쪽에서 서비스를 제공하려면 NOS가 설치되어야 한다.
리눅스의 서비스로는 웹서비스, 메일서비스, 채팅서비스, FTP서비스 등을 지원한다. 


<Linux의 탄생>

Unix(69)-->Minix --> 리누즈 토발즈가 Minix를 참고하여 커널을 c언어로 개발(1991년에 공개, 리눅스의 탄생)

1984년, GNU 재단의 리더인 리차드 스톨만이 상용 unix에 호환되는 자유 소프트웨어 운영체제 만들기 위해 컴파일러(gcc), shell, 커널을 만들다가 커널의 개발이 너무 늦어 리누즈 토발즈의 리눅스 커널 사용.-->GNU/Linux

open program: 알집, kakao talk 등 무료 프로그램, 이 오픈프로그램 소스코드까지는 기술적으로 들여다 볼 수 없다.  
opem source: 설계도, 즉 소스코드까지 확인 할 수 있는것이 오픈소스. 리눅스는 오픈소스이다.

리눅스의 배포판에는 유료 기업용 Linux Redhat 여기서 엔터프라이즈 지원을 뺀 포크버전인 무료버전 CentOS와 데비안 리눅스에서 발전한 Ubuntu.
리눅스는 일반사용자 버전과 관리자 버전. $ #순서로 명령 프롬프트가 다르고 명령어가 다르다. 관리자버전(root)으로는 프로그램 관리 프로세스 관리 프로그램 설치/삭제/조회/중단, 사용자 관리 등...

path(경로)

.       :현재 디렉토리       cd . 현제 디렉토리 이동
..      : 부모 디렉토리      cd .. 한단계 거슬러 올라감

/      :최상위 루트 디렉토리 

~     : home 디렉토리   cd ~ home으로 돌아감 



~/aa/kk   : home 디렉토리 밑에 aa라는 디렉토리 밑에 kk라는 실행파일.
  














  